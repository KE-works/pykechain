{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/versions.json"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA71W7W7CIBR9F/7ONW01WeyrLIu5pagohQaoLjG++6jUcokm27KVX+We23LO/eCWC9HM9MIaUr1fCHQdqciR0T1wWWa9YdqQBRFQM+Ecd/vkHlxJhxRZmeUOaeGgNKkKt+JyWJUL0oGle/fO4K97LhpSyV4I59BMM8HAMI9cFw/MVGmWdbxF5N4K1Mssx9TLiTr/B+pzRH1+oC6eUxf/QA3GKMrBDlRBQowmyoKhqmNIxN1OVoRmx2xUhxFIJGDLP23vzgeSgKBJhN90VDAaXsRI53V447dCfMwbquSW7x5yEfA0akx0LkyiIwkdx0fhZqWJ1zJocfnvNp6A+fMJ+MeY+RZo1HkTkCbyllnNKRYQkPmjb9RZCgUN5sfY/Ar2Sh0R+WimyX0NUsZ/3oDMH7kFcxwg1PUTMmv8zQHkThlG3YDFdY/hOAHFNwkofp4ADScm3eCXrs3rzLMiGTf3ZnRvJneSjkAyEBQyUWalu4e9Fqv1S/G2ytdsvQp5KcOl7PmtjKBvsBbi9iPXj+sX9rLi7SQKAAA=", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "Content-Language": ["en", "en"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "Allow": ["GET, HEAD, OPTIONS"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/versions.json"}, "recorded_at": "2019-11-29T12:38:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/v3/scopes.json?name=Bike+Project&status=ACTIVE&fields=id%2Cname%2Cref%2Ctext%2Ccreated_at%2Cupdated_at%2Cstart_date%2Cdue_date%2Cstatus%2Ccategory%2Cprogress%2Cmembers%2Cteam%2Ctags%2Cscope_options%2Cteam_id_name%2Cworkflow_root_id"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA6VUTW+cMBD9K8jXrFc2YL5OaaMcekmjZttDqwgZe9ilAYyMSRqt9r93DJvtR5oqUiSwxPObmac3M+yJhXFq3UiKb3vSaFKQSgutQEoqIwE0TitG81oJmqUi5qyOpUhqsiK97ADZ75s7CK6t+Q7KIWqh9ikQpMMJdPDDIXpkBdMIOnAmcDC64PrxDtRONn0gex0M07gLGjff7iBom65BaSsyOukm1EjeXWw+fLlEREkHW2MfEft8c/mpvLn4eD3jFvBGl9JXDBnPKWc0DDcsK1hSxNk6S2MRia9InQb9N5XTUGxYXkRREYp1yBiLE091cusdukUlygxQmsE1pkdoT9Q0OtNdyftmKz240Mw9WNtouMG3kpYU/dS2B2+F7MpGl4t7+ycXNwgHV2bNsdbcBBlKlkS8ojpNOY0zltJKhyFVQikNIuOQ5gTzddBVYH91L8L4sZTKNfeY19kJZqAFqRcqKWrZjgv6hCw06GTT+uadV+u+9f6MYI/6fKs62cst0k+tJ0uSIzxnOawWGfHbZcgXZPjPFzXMSZ9E5K8w4wT+W8Tz8j74deX5m6vvjHd9dGDPhqaLqK9/jps178tame5PeeM0gP2vPXOLbud1sq70079MfkpZTDkuCSvm52w+MVhP8Bst8zTGn9Nw1bf4H8ExZOtcZGnE+PHMV+TB2Lu6NQ+lNcaV83QzznSSYLJYqAqnW8U0i0VKk6gWLAsTGWc1OdwefgIKFO4KngQAAA==", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "Content-Language": ["en", "en"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "Allow": ["GET, POST, HEAD, OPTIONS"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/v3/scopes.json?name=Bike+Project&status=ACTIVE&fields=id%2Cname%2Cref%2Ctext%2Ccreated_at%2Cupdated_at%2Cstart_date%2Cdue_date%2Cstatus%2Ccategory%2Cprogress%2Cmembers%2Cteam%2Ctags%2Cscope_options%2Cteam_id_name%2Cworkflow_root_id"}, "recorded_at": "2019-11-29T12:38:17"}, {"request": {"body": {"encoding": "utf-8", "string": "{\"name\": \"Test upload script to service\", \"scope\": \"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\", \"description\": \"Only used for testing - you can safely remove this\", \"script_type\": \"PYTHON SCRIPT\", \"script_version\": \"1.0\", \"env_version\": \"3.6\", \"run_as\": \"kenode\"}"}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["258"], "Content-Type": ["application/json"]}, "method": "POST", "uri": "<API_URL>/api/services.json"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"3ddc2cd9-30a2-4768-9e24-b604f991a91b\",\"url\":\"<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b\",\"name\":\"Test upload script to service\",\"ref\":\"test-upload-script-to-service\",\"description\":\"Only used for testing - you can safely remove this\",\"scope\":\"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\",\"script_file_name\":\"\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.6\",\"permissions\":{\"retrieve_execute\":true,\"create\":true,\"destroy\":true,\"read\":true,\"write\":true,\"update\":true},\"updated_at\":\"2019-11-29T12:38:17.197997Z\",\"trusted\":false,\"run_as\":\"kenode\",\"verified_on\":null,\"verification_results\":{}}]}"}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Content-Length": ["664"], "Connection": ["keep-alive"], "Location": ["<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b"], "Vary": ["Accept, Accept-Language, Cookie"], "X-XSS-Protection": ["1; mode=block"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "Allow": ["GET, POST, HEAD, OPTIONS"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["SAMEORIGIN"], "Ke-Chain": ["2"]}, "status": {"code": 201, "message": "Created"}, "url": "<API_URL>/api/services.json"}, "recorded_at": "2019-11-29T12:38:17"}, {"request": {"body": {"encoding": "utf-8", "string": "--c0946469f73dfb34ce64e53450f568b4\r\nContent-Disposition: form-data; name=\"attachment\"; filename=\"test_upload_script.py\"\r\n\r\n#!/usr/bin/env python\n\n\"\"\"\nDebugging script returning the environment etc\n\"\"\"\n\nimport os\nimport platform\nimport sys\nimport time\nfrom pprint import pprint\n\n\ndef main(*args, **kwargs):\n    start = time.time()\n    foo, bar = \"cow says\", \"moo!\"\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\n    print('--- arguments: {}'.format(args))\n    print('--- keyword arguments: {}'.format(kwargs))\n    print('--- local variables dict: {}'.format(dir()))\n    pprint('--- environment: {}'.format(os.environ), width=120)\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\n    pprint('--- python paths: {}'.format(sys.path), width=120)\n    mark_1 = time.time()\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\n    try:\n        import pykechain\n        print('--- importing pykechain version: {}'.format(pykechain.version))\n    except ImportError:\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\n\n    mark_2 = time.time()\n\n    from envparse import env\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\n              'KECHAIN_SCOPE_ID are not set')\n    else:\n        project = pykechain.get_project()\n        mark_3 = time.time()\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\n\n    end = time.time()\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\r\n--c0946469f73dfb34ce64e53450f568b4--\r\n"}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["2265"], "Content-Type": ["multipart/form-data; boundary=c0946469f73dfb34ce64e53450f568b4"]}, "method": "POST", "uri": "<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b/upload"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"3ddc2cd9-30a2-4768-9e24-b604f991a91b\",\"url\":\"<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b\",\"name\":\"Test upload script to service\",\"ref\":\"test-upload-script-to-service\",\"description\":\"Only used for testing - you can safely remove this\",\"scope\":\"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\",\"script_file_name\":\"test_upload_script.py\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.6\",\"permissions\":{\"create\":true,\"write\":true,\"update\":true,\"read\":true,\"retrieve_execute\":true,\"destroy\":true},\"trusted\":false,\"run_as\":\"kenode\",\"verified_on\":null,\"verification_results\":{}}]}"}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Content-Length": ["642"], "Connection": ["keep-alive"], "Content-Language": ["en"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "Vary": ["Accept, Accept-Language, Cookie"], "Allow": ["POST, OPTIONS"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"]}, "status": {"code": 202, "message": "Accepted"}, "url": "<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b/upload"}, "recorded_at": "2019-11-29T12:38:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/service_executions.json?scope=bd5dceaa-a35e-47b0-9fc5-875410f4a56f"}, "response": {"body": {"encoding": null, "base64_string": "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", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "X-XSS-Protection": ["1; mode=block"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "Allow": ["GET, HEAD, OPTIONS"], "X-Content-Type-Options": ["nosniff"], "X-Frame-Options": ["SAMEORIGIN"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/service_executions.json?scope=bd5dceaa-a35e-47b0-9fc5-875410f4a56f"}, "recorded_at": "2019-11-29T12:38:17"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.22.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.1.4"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["0"]}, "method": "DELETE", "uri": "<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b.json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Fri, 29 Nov 2019 12:38:17 GMT"], "Content-Type": ["application/json"], "Content-Length": ["14"], "Connection": ["keep-alive"], "Content-Language": ["en", "en"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "Vary": ["Accept, Accept-Language, Cookie"], "Allow": ["GET, PUT, PATCH, DELETE, HEAD, OPTIONS"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "Ke-Chain": ["2"]}, "status": {"code": 204, "message": "No Content"}, "url": "<API_URL>/api/services/3ddc2cd9-30a2-4768-9e24-b604f991a91b.json"}, "recorded_at": "2019-11-29T12:38:17"}], "recorded_with": "betamax/0.8.1"}