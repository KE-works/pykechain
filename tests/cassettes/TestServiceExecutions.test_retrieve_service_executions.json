{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/versions.json"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA71W0W6DIBT9F17XGaXLkvkry7JckbasCAawbmn678Nh5ZI2WdK0PME5qOfc4/XGIzHcDtJZUr8fCfQ9qcmesx0IRYvBcmPJikhouPQHZ3zwi9DKM+uiKirPdPClDanXfifUtKtWpAfHdv6a6bwZhGxJrQYp/YHhhksOlgfmtLpQZtrwohcdEg8ok/SYSI9XpMt/pMtbpcFazQS4SSpaSFlspbxupbyDFct0z5GJM86VBHPiINyP1FucRMIuVsKjZx8zCFZm0eAmgBt7ot1yl7TFTGTKYyO+3eA/V2QBUXmSCDV/Mq02YnuRReTzuLHJZ2ozTQjoBe7HP5SnXsehw6//jGPNVToPqnvNA7EBlnTeQuSpvOPOCIYNRObx1bd6VFJDi/Ux9/gBsNN6j8RnmCf7BpRKfwQi8/jsHdj9RKGuX5gs9SNlRMXCaUFpUT5XL29PDVR+eY0p0MUHpVdjIPEW7IR4jpw+Tr9lLMDunwkAAA==", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:31 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "Allow": ["GET, HEAD, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/versions.json"}, "recorded_at": "2020-02-27T10:07:31"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/v3/scopes.json?name=Bike+Project&status=ACTIVE&fields=id%2Cname%2Cref%2Ctext%2Ccreated_at%2Cupdated_at%2Cstart_date%2Cdue_date%2Cstatus%2Ccategory%2Cprogress%2Cmembers%2Cteam%2Ctags%2Cscope_options%2Cteam_id_name%2Cworkflow_root_id"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA51UTY+bMBT8K8jXjSMDNl+nbVd76KWNmrSHrSLkwCNxAxgZk+1qlf/eZ0iaXaVSo0rGwuPBM4yf/UoM9ENte5L9eCWqJBnZlKIsQEoqQwGUxxtG06oQNIkF91nFpYgqMiOtbADZH9UevIXRP6GwiBqo3BII0u4PaOGXRfTE8oYeSs9qz0JvvcXLHoqdVK0n29Lrhn7nKTvO7sCrVaPQ2oz0VtoBPZIPD6tP3x8RKaSFrTYviH1bPn7Nlw9fFiNuAGfKXDrFgPkp9RkNghVLMhZlPJknMReheELq0JVvqQGjLKB+vPJZhk1E8zgNRMQc1cqtS2iNTgrdQa47q3SL0CvRBzBGlbDEZyMNydqhrtHH0FvdfJYHtZWO674+uihkk6syn9KbqA00GzCXHQjRWg/mFLBLqZGt3IK5pI5vqs9lYdUBh9YMMCPQSFW78O8387aeGNPSZ4YDTitdkBpkeaZVsu7hOJtspNc+HPc2E/+SH5Wu9B3vLM+v1N3wNnV5UwR/9/AuA/+diX7owNzuYqfdzvUWzF2nmpC6f7jHgzGW+7zQzX/t0ZjRejwSxuaugqdCjynj1MdCZ9nY7sYeJcoB3tASR2P+NQ2P6xbvAixDNk8TloogPPUYwrM2+6rWz7nR2ubjNcF8VkYRLsZFsaE8KThNuIhpFFaCJUEkeVKR4/r4G3vCPghiBAAA", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:31 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "Allow": ["GET, POST, HEAD, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/v3/scopes.json?name=Bike+Project&status=ACTIVE&fields=id%2Cname%2Cref%2Ctext%2Ccreated_at%2Cupdated_at%2Cstart_date%2Cdue_date%2Cstatus%2Ccategory%2Cprogress%2Cmembers%2Cteam%2Ctags%2Cscope_options%2Cteam_id_name%2Cworkflow_root_id"}, "recorded_at": "2020-02-27T10:07:31"}, {"request": {"body": {"encoding": "utf-8", "string": "{\"name\": \"Test upload script to service\", \"scope\": \"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\", \"description\": \"Only used for testing - you can safely remove this\", \"script_type\": \"PYTHON SCRIPT\", \"script_version\": \"1.0\", \"env_version\": \"3.6\", \"run_as\": \"kenode\"}"}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["258"], "Content-Type": ["application/json"]}, "method": "POST", "uri": "<API_URL>/api/services.json"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"c471efc4-8c9e-449c-8545-77b38bbf2da2\",\"url\":\"<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2\",\"name\":\"Test upload script to service\",\"ref\":\"test-upload-script-to-service\",\"description\":\"Only used for testing - you can safely remove this\",\"scope\":\"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\",\"script_file_name\":\"\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.6\",\"permissions\":{\"create\":true,\"update\":true,\"destroy\":true,\"write\":true,\"read\":true,\"retrieve_execute\":true},\"updated_at\":\"2020-02-27T10:07:31.481246Z\",\"trusted\":false,\"run_as\":\"kenode\",\"verified_on\":null,\"verification_results\":{}}]}"}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:31 GMT"], "Content-Type": ["application/json"], "Content-Length": ["664"], "Connection": ["keep-alive"], "Location": ["<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2"], "Vary": ["Accept, Accept-Language, Cookie"], "Allow": ["GET, POST, HEAD, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"], "Ke-Chain": ["2"]}, "status": {"code": 201, "message": "Created"}, "url": "<API_URL>/api/services.json"}, "recorded_at": "2020-02-27T10:07:31"}, {"request": {"body": {"encoding": "utf-8", "string": "--12bf7a93d82a4f9907f3284a2568b5de\r\nContent-Disposition: form-data; name=\"attachment\"; filename=\"test_upload_script.py\"\r\n\r\n#!/usr/bin/env python\r\n\r\n\"\"\"\r\nDebugging script returning the environment etc\r\n\"\"\"\r\n\r\nimport os\r\nimport platform\r\nimport sys\r\nimport time\r\nfrom pprint import pprint\r\n\r\n\r\ndef main(*args, **kwargs):\r\n    start = time.time()\r\n    foo, bar = \"cow says\", \"moo!\"\r\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\r\n    print('--- arguments: {}'.format(args))\r\n    print('--- keyword arguments: {}'.format(kwargs))\r\n    print('--- local variables dict: {}'.format(dir()))\r\n    pprint('--- environment: {}'.format(os.environ), width=120)\r\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\r\n    pprint('--- python paths: {}'.format(sys.path), width=120)\r\n    mark_1 = time.time()\r\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\r\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\r\n    try:\r\n        import pykechain\r\n        print('--- importing pykechain version: {}'.format(pykechain.version))\r\n    except ImportError:\r\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\r\n\r\n    mark_2 = time.time()\r\n\r\n    from envparse import env\r\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\r\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\r\n              'KECHAIN_SCOPE_ID are not set')\r\n    else:\r\n        project = pykechain.get_project()\r\n        mark_3 = time.time()\r\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\r\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\r\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\r\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\r\n\r\n    end = time.time()\r\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\r\n\r\n\r\nif __name__ == '__main__':\r\n    sys.exit(main())\r\n\r\n--12bf7a93d82a4f9907f3284a2568b5de--\r\n"}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["2317"], "Content-Type": ["multipart/form-data; boundary=12bf7a93d82a4f9907f3284a2568b5de"]}, "method": "POST", "uri": "<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2/upload"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"c471efc4-8c9e-449c-8545-77b38bbf2da2\",\"url\":\"<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2\",\"name\":\"Test upload script to service\",\"ref\":\"test-upload-script-to-service\",\"description\":\"Only used for testing - you can safely remove this\",\"scope\":\"bd5dceaa-a35e-47b0-9fc5-875410f4a56f\",\"script_file_name\":\"test_upload_script.py\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.6\",\"permissions\":{\"create\":true,\"update\":true,\"destroy\":true,\"write\":true,\"read\":true,\"retrieve_execute\":true},\"trusted\":false,\"run_as\":\"kenode\",\"verified_on\":null,\"verification_results\":{}}]}"}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:31 GMT"], "Content-Type": ["application/json"], "Content-Length": ["642"], "Connection": ["keep-alive"], "Vary": ["Accept, Accept-Language, Cookie"], "Allow": ["POST, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"]}, "status": {"code": 202, "message": "Accepted"}, "url": "<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2/upload"}, "recorded_at": "2020-02-27T10:07:31"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/service_executions.json?scope=bd5dceaa-a35e-47b0-9fc5-875410f4a56f"}, "response": {"body": {"encoding": null, "base64_string": "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", "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:31 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Accept-Language, Cookie"], "Allow": ["GET, HEAD, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"], "Ke-Chain": ["2"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/service_executions.json?scope=bd5dceaa-a35e-47b0-9fc5-875410f4a56f"}, "recorded_at": "2020-02-27T10:07:32"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.23.0"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["3.5.2"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["0"]}, "method": "DELETE", "uri": "<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2.json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.16.1"], "Date": ["Thu, 27 Feb 2020 10:07:32 GMT"], "Content-Type": ["application/json"], "Content-Length": ["14"], "Connection": ["keep-alive"], "Vary": ["Accept, Accept-Language, Cookie"], "Allow": ["GET, PUT, PATCH, DELETE, HEAD, OPTIONS"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en", "en"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Content-Type-Options": ["nosniff"], "X-XSS-Protection": ["1; mode=block"], "Ke-Chain": ["2"]}, "status": {"code": 204, "message": "No Content"}, "url": "<API_URL>/api/services/c471efc4-8c9e-449c-8545-77b38bbf2da2.json"}, "recorded_at": "2020-02-27T10:07:32"}], "recorded_with": "betamax/0.8.1"}