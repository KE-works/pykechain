{"http_interactions": [{"response": {"body": {"string": "", "base64_string": "H4sIAAAAAAAAA5VUbWvbMBD+K0WfNogSWfKb8qlb1w+DwQYr/bBRgiydEze2ZCS5Wyn57zvnrUkZLMM2WHfP3XN3fs4vxEMY2hjI/OcLGXxL5mQVYx/ms9kaNFd9M10D1SvV2Kl23QwNs6BdD2GW10WlZc0o5yXQ1AhFpdGMgs5UkZlCQGKmj8FZMiGNwcSXBCDWqg4Q/bFZw9U37x5Bx6t3/TOWM1ZxFSHExi7fIzLC74hIfAtRxQGbIB9u7j7f344+r2xoYuPsrrcj4ubL1++3nxCxaparFp8IWFz0AxyptxCyeZgQFUKztIBGO7TthHTQVeB3GaFTzTiv6rqa2nZsMix2/kO60aCsWp5YkIofeXYxSsfmCQ6IIYDfu8dOD/GbySvh5VTFpVTH8Z4RqYs6q1Ub9nzif1obj2d0j06voJsiDVgTrlF3v5xfh1F3l7ecX1rCOdv2a6NGfFwYFUc/Z0lBWUJ5fsfFnDG8f2BKM8A/ENWg14C6fCGdM9AuvHOjSgvJldAVUCayHNUvU1qmZU0rrau6EpzVWowlW6zCajiE1RlPhBBAVQKGppBntErynEopa5koUeo6OSxYyhgm5wVNcHNpWuSKlrzABauKrOCQSwCGEye9dxrCuAzMKMikkLQUQtO0LBStZJ5SlplUC5A1aEm2AUu/jWDTPOXF6TUhYJqoqvY45B581+DibFcP/yr9OK+Fh849wZtvuPMdTtrD9rRX1O640K2zr0aDyvHu+TzBQhnzVgynnr9wHus5j0LK/d9gs3nY/AE34ZnVHwUAAA==", "encoding": null}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29", "headers": {"Connection": "keep-alive", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "Date": "Mon, 12 Mar 2018 13:44:03 GMT", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "X-Content-Type-Options": "nosniff", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Allow": "GET, POST, HEAD, OPTIONS", "Content-Encoding": "gzip"}}, "recorded_at": "2018-03-12T13:44:03", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Accept-Encoding": "gzip, deflate", "X-Requested-With": "XMLHttpRequest", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Accept": "*/*", "PyKechain-Version": "1.15.4", "User-Agent": "python-requests/2.18.4"}, "uri": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29"}}, {"response": {"body": {"string": "", "base64_string": "H4sIAAAAAAAAA41Ry07DMBD8lcjnOokd59FcucAFKugFEIpce6OapklkO4Gq6r+zaYrCkdvu7OzMavZMLLih8Y6U72diNCmJ4KIoCpbSLGeMCq2A7mIpqBA5ZzpThcxTsiKDbZC89753ZRQdQHHZm/AAVO2laUPVHSMEIgd2NApc9B/Z8NN1LWq38ggovgXnAydHCG4qgVPW9B4ZGubSIL8kCDjV9dNOVuc7ta5jynkBaJNIutYqpqBSNNB5Akxf6dN2VZsGqpubR7dqcqvmYdifFqI/XdU3r9v7p8fg5e75YbNdpiNYN1/CwhhhaMc/WBJOefVgj8ZNEGZ9JsqC9ChZy8bBCr8gMXtvB6yHXl9Hc2fBWwN4FXyDGhb8y5qlwTi87U5ze/mV0JX06M9jVtA4oYxvGS9FViYsFOm6SJI3cvm4/ADTWm8JAwIAAA==", "encoding": null}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/services.json?scope=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d&name=Test+save+service+script", "headers": {"Connection": "keep-alive", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "Date": "Mon, 12 Mar 2018 13:44:03 GMT", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "X-Content-Type-Options": "nosniff", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Allow": "GET, POST, HEAD, OPTIONS", "Content-Encoding": "gzip"}}, "recorded_at": "2018-03-12T13:44:03", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Accept-Encoding": "gzip, deflate", "X-Requested-With": "XMLHttpRequest", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Accept": "*/*", "PyKechain-Version": "1.15.4", "User-Agent": "python-requests/2.18.4"}, "uri": "<API_URL>/api/services.json?scope=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d&name=Test+save+service+script"}}, {"response": {"body": {"string": "#!/usr/bin/env python\n\n\"\"\"\nDebugging script returning the environment etc\n\"\"\"\n\nimport os\nimport platform\nimport sys\nimport time\nfrom pprint import pprint\n\n\ndef main(*args, **kwargs):\n    start = time.time()\n    foo, bar = \"cow says\", \"moo!\"\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\n    print('--- arguments: {}'.format(args))\n    print('--- keyword arguments: {}'.format(kwargs))\n    print('--- local variables dict: {}'.format(dir()))\n    pprint('--- environment: {}'.format(os.environ), width=120)\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\n    pprint('--- python paths: {}'.format(sys.path), width=120)\n    mark_1 = time.time()\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\n    try:\n        import pykechain\n        print('--- importing pykechain version: {}'.format(pykechain.version))\n    except ImportError:\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\n\n    mark_2 = time.time()\n\n    from envparse import env\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\n              'KECHAIN_SCOPE_ID are not set')\n    else:\n        project = pykechain.get_project()\n        mark_3 = time.time()\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\n\n    end = time.time()\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n", "encoding": "ISO-8859-1"}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/services/42488815-6711-4dce-b0a4-44721d6c8a75/download", "headers": {"Connection": "keep-alive", "Vary": "Accept, Cookie", "X-XSS-Protection": "1; mode=block", "Date": "Mon, 12 Mar 2018 13:44:03 GMT", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "X-Content-Type-Options": "nosniff", "Content-Type": "text/x-python", "Content-Length": "2102", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Allow": "GET, HEAD, OPTIONS", "Content-Disposition": "attachment; filename=\"test_save_script.py\""}}, "recorded_at": "2018-03-12T13:44:03", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"Accept-Encoding": "gzip, deflate", "X-Requested-With": "XMLHttpRequest", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Accept": "*/*", "PyKechain-Version": "1.15.4", "User-Agent": "python-requests/2.18.4"}, "uri": "<API_URL>/api/services/42488815-6711-4dce-b0a4-44721d6c8a75/download"}}], "recorded_with": "betamax/0.8.0"}