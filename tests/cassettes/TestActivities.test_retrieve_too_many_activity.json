{"recorded_with": "betamax/0.8.0", "http_interactions": [{"response": {"status": {"message": "OK", "code": 200}, "body": {"base64_string": "H4sIAAAAAAAAA61UwW7bMAz9lUKnDYgS27Itu6duXQ8DBmzAhl6GIqAlOnFjS4YktyuK/PvouDGSnAashwAhRfLxkY9+ZQ790AbPrn+/ssG17JptQ+j99Wq1QyWgb5Y75GoLjVkq263IsfLK9uhXeS0rVdYRT5ICeaoF8FKriKPKQGZaCoz18tFbwxas0VT4XxIo1kCHFP252eHVD2cfUYWrD/0LtTN2cRXQh8ZsPlJkwD+BIumfDxAGIsE+3f76en83vjkwvgmNNRO3OeL22/efd18oYttsti39AlJzwQ04Qx9C2P5hwcD7ZmOQnGZo2wXrsKvQTRVHTglR8+sODGzQHauQB1RonvDEMSVe4FATg0f3Zo3EjpUWDDtoxm1UN9XStGy/mADlOwLOMz2Bm4HEOVANrf8/aqN5AgTnvPJ35PVo1Ra7JYWh0f4E8/zhhoT9bN3Oj8I+bJs04sJaQ5j3rQc8s6tB7ZA0NzXN0iiKRJZIHqsEeCpz4EUiSdGVzGSCeYkYjeo3VNkoXDtrR8HWWRILIZBDjJqnmGe8ivOcl2VZlzGIQtUxpXVWY3vMkWUCQlXICTCn4ylTXqRFzSulqroSSVQrQdNkvbMbummSaLTMYxnHaR6laZ6kMqNB6CZA1c7zHOnXrX0+gKwPlGKRylpGildFQr1BXHBAyLkuMlBYl6iLgnrr0XUNHcfhvOjL0Y9TWoPWlzt0CPN5vUU57OwTXmxyejtaitIoUrXW4Cy+yTmbF9XOYTUpztmXC+RDfyew+/3D/i+c6LwfAwUAAA==", "string": "", "encoding": null}, "headers": {"Allow": "GET, POST, HEAD, OPTIONS", "Transfer-Encoding": "chunked", "Strict-Transport-Security": "max-age=10886400; includeSubDomains", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "X-Frame-Options": "SAMEORIGIN", "Content-Type": "application/json", "Date": "Wed, 14 Mar 2018 16:13:52 GMT", "X-Content-Type-Options": "nosniff", "Server": "nginx/1.12.2", "Content-Encoding": "gzip", "Connection": "keep-alive"}, "url": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29"}, "recorded_at": "2018-03-14T16:13:52", "request": {"method": "GET", "uri": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29", "body": {"string": "", "encoding": "utf-8"}, "headers": {"X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "PyKechain-Version": "2.0.0-rc6", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "Connection": "keep-alive"}}}, {"response": {"status": {"message": "OK", "code": 200}, "body": {"base64_string": "H4sIAAAAAAAAA7XUwY6DIBAG4HfhbIx69FU2GzOlo05FMIC1m6bvvlRbwO5ms4dyMvNP4ucgcGUazSysYfXHlcE0sZoNyHsgWeWzQW1YxgQcULjGsz67BynJajkLkbERTkr7gmQoJrC894VGjQLB4Jbcsh8gVxrzicbI3Kpk4kLHDm3DlWypi9jXPO3Iy27kZT8yq/IiL5hHKy8Wniv+b4ExihPY+7uDuU/TTmu4mjCyn3Uy1eyW16TdUeuILV3s7E5WxEZRWhu4pTPZL6HiDb1Pk30BTBSja5UMoxb4bo19kIwc0WrisRmSZGiv1BCJjzIZZ8EM9yiIIXk3ejyB7JRB7o5GBL7E4S4s3V1Yhruw/OUuLP/yNJxRunMi3U875BsTuWu7ebQb337T1J+3byYaxKhvBwAA", "string": "", "encoding": null}, "headers": {"Allow": "GET, HEAD, OPTIONS", "Transfer-Encoding": "chunked", "Strict-Transport-Security": "max-age=10886400; includeSubDomains", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "X-Frame-Options": "SAMEORIGIN", "Content-Type": "application/json", "Date": "Wed, 14 Mar 2018 16:13:52 GMT", "X-Content-Type-Options": "nosniff", "Server": "nginx/1.12.2", "Content-Encoding": "gzip", "Connection": "keep-alive"}, "url": "<API_URL>/api/versions.json"}, "recorded_at": "2018-03-14T16:13:52", "request": {"method": "GET", "uri": "<API_URL>/api/versions.json", "body": {"string": "", "encoding": "utf-8"}, "headers": {"X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "PyKechain-Version": "2.0.0-rc6", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "Connection": "keep-alive"}}}, {"response": {"status": {"message": "OK", "code": 200}, "body": {"base64_string": "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", "string": "", "encoding": null}, "headers": {"Allow": "GET, POST, HEAD, OPTIONS", "Transfer-Encoding": "chunked", "Strict-Transport-Security": "max-age=10886400; includeSubDomains", "Vary": "Accept-Encoding", "X-XSS-Protection": "1; mode=block", "X-Frame-Options": "SAMEORIGIN", "Content-Type": "application/json", "Date": "Wed, 14 Mar 2018 16:13:53 GMT", "X-Content-Type-Options": "nosniff", "Server": "nginx/1.12.2", "Content-Encoding": "gzip", "Connection": "keep-alive"}, "url": "<API_URL>/api/activities.json?fields=__all__&scope_id=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d"}, "recorded_at": "2018-03-14T16:13:53", "request": {"method": "GET", "uri": "<API_URL>/api/activities.json?fields=__all__&scope_id=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d", "body": {"string": "", "encoding": "utf-8"}, "headers": {"X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Accept": "*/*", "PyKechain-Version": "2.0.0-rc6", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "Connection": "keep-alive"}}}]}