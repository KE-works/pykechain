{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/scopes.json?name=Bike+Project+%28pykechain+testing%29&status=ACTIVE"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA6VUUWvbMBD+K8VPG0SJLdmS3aduXR8Ggw02+jJKkKVz4sSWjCS3KyX/fWfHSZOSh0IfDL7T6b7vO3/nl8iB75vgo+u/L1Hvmug6WofQ+evFYguKyq6eb4GotazNXNl2gYmFV7YDv+CVKFVRxYTSHEiqmSSFVjEBlUmRacEg0fONtyaaRbXGxu+5gLVGtoDVX+stXP1ydgMqXH3qnpHOwOIqgA+1WX3GygD/Albimw8y9Cgi+nL75/v93XDmpPF1qK3Za1vXq3WDTwCkElwPJ5duf/z8ffftFXqMo93DLJLe1ysDmDR908yiFtoS3L4jtLIe5lXelHPTDCL9UqpQP8IBABOtNHIF7jQztjgkeg9uQh2EHcr3E6NHRtFu9gr4cajjNCcgcRlIvktZJRv/DmlDOMGxy3Abq9bQzrEFGO1v0HdP1m394LuPSz5vPhHhJ0QeRkO4sNQyHL+37uEsLnu1BfTcy97RaRzHLKOCJLgqJBVckpwKdHQpMkGBFwAxQrVWQ7N01g5uFQWVTJVA8CbHLShSkqd5RUqlyqpkNK4UG+gZZGMUHK5VGU0YY0BkApqkwDNSJpyToiiqIpEsV1WC04w6Z1e402jReC4SkeV5kTJOWUpRLOg6yLI5jnCYb9XYpxFkOUpiPKcVVzmRDCFSTocljRVhXDGFFDMuEqTXgWtrXI5xvfDP0e2nNI19jJYOWvsIbz/SdCi1fnui0SXOPh9C5WDsOflrHy5VY81rEnP6UuNzF5zTOTnb7R52/wGvBU1FAwUAAA==", "string": ""}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Cookie"], "Allow": ["GET, POST, HEAD, OPTIONS"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/scopes.json?name=Bike+Project+%28pykechain+testing%29&status=ACTIVE"}, "recorded_at": "2018-03-20T10:06:35"}, {"request": {"body": {"encoding": "utf-8", "string": "name=Test+upload+script+to+service&scope=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d&script_type=PYTHON+SCRIPT&env_version=3.5"}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["119"], "Content-Type": ["application/x-www-form-urlencoded"]}, "method": "POST", "uri": "<API_URL>/api/services.json"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"93116350-a9df-407e-b2a8-79d71402564e\",\"url\":\"<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"update\":true,\"destroy\":true,\"create\":true,\"write\":true,\"read\":true,\"retrieve_execute\":true},\"updated_at\":\"2018-03-20T10:06:35.063918Z\"}]}"}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Content-Length": ["495"], "Connection": ["keep-alive"], "Allow": ["GET, POST, HEAD, OPTIONS"], "Vary": ["Accept, Cookie"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "Location": ["<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e"], "X-Content-Type-Options": ["nosniff"]}, "status": {"code": 201, "message": "Created"}, "url": "<API_URL>/api/services.json"}, "recorded_at": "2018-03-20T10:06:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA42QyU7DMBCGXyXyuU7sOPuVC1ygglwAoci1J6rVNIlsJ1BVfXcmXVSO3Dzf/Is8R2LBTZ13pPo8EqNJRUrBeSZSRmWpW5qwHOgmlgXNS53zhMVplgBZkcl2KN56P7oqinagYjmacAdUbaXpQzXsIwSRAzsbBS76Z2wv94C5NTgfTGM3SB04Zc3oAz8E1zCUabhQM/SoRuDUMC7GrM03qmwZjeMCaKKFpKVWjIJKZZ7qXADXZ/niblrTQXOtvFN/OEet3+vHl+fg7eH1aV3ftzNYd6nlIUMM/fyHiTBFNoLdG7cgPOyRKAvSY2QrOwcrPLm3BmZo4AfUtCy8nZBPo5b3CT369v625r7Av3s7HC7j6WbTjfTYHzNeUCZozGrOKpZVIg1ZJkpefJDT1+kXyza3ffABAAA=", "string": ""}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Cookie"], "Allow": ["GET, PUT, PATCH, DELETE, HEAD, OPTIONS"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e"}, "recorded_at": "2018-03-20T10:06:35"}, {"request": {"body": {"encoding": "utf-8", "string": "--d8a3745c60b340b9b4b73a2705c75ce9\r\nContent-Disposition: form-data; name=\"attachment\"; filename=\"test_upload_script.py\"\r\n\r\n#!/usr/bin/env python\n\n\"\"\"\nDebugging script returning the environment etc\n\"\"\"\n\nimport os\nimport platform\nimport sys\nimport time\nfrom pprint import pprint\n\n\ndef main(*args, **kwargs):\n    start = time.time()\n    foo, bar = \"cow says\", \"moo!\"\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\n    print('--- arguments: {}'.format(args))\n    print('--- keyword arguments: {}'.format(kwargs))\n    print('--- local variables dict: {}'.format(dir()))\n    pprint('--- environment: {}'.format(os.environ), width=120)\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\n    pprint('--- python paths: {}'.format(sys.path), width=120)\n    mark_1 = time.time()\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\n    try:\n        import pykechain\n        print('--- importing pykechain version: {}'.format(pykechain.version))\n    except ImportError:\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\n\n    mark_2 = time.time()\n\n    from envparse import env\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\n              'KECHAIN_SCOPE_ID are not set')\n    else:\n        project = pykechain.get_project()\n        mark_3 = time.time()\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\n\n    end = time.time()\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\r\n--d8a3745c60b340b9b4b73a2705c75ce9--\r\n"}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["2265"], "Content-Type": ["multipart/form-data; boundary=d8a3745c60b340b9b4b73a2705c75ce9"]}, "method": "POST", "uri": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e/upload"}, "response": {"body": {"encoding": null, "string": "{\"results\":[{\"id\":\"93116350-a9df-407e-b2a8-79d71402564e\",\"url\":\"<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"test_upload_script.py\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"create\":false,\"retrieve_execute\":true,\"update\":true,\"read\":true,\"write\":true,\"destroy\":true}}]}"}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Content-Length": ["474"], "Connection": ["keep-alive"], "Allow": ["POST, OPTIONS"], "Vary": ["Accept, Cookie"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"]}, "status": {"code": 202, "message": "Accepted"}, "url": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e/upload"}, "recorded_at": "2018-03-20T10:06:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"]}, "method": "GET", "uri": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e"}, "response": {"body": {"encoding": null, "base64_string": "H4sIAAAAAAAAA42QzW7DIBCEX8XiHGzAf7GvvbSXNmp9aavKIrBWUBwbAXYbRXn3EtuRe+yNnfl2BrggA3ZonUXl5wUpiUpUxJRmcUowL2SDE5ID3jO+xXkhc5oQlmYJoA0aTOvhg3PallF0BMG4VuERsDhw1YWiP0VeiCyYUQmw0T9jO34Cn1uBdcGg257LwAqjtAtcHyxhHpMwq6rvPO0FK3p9W8yafC+KhmDGtoATGXNcSEEwiJTnqcxjoHLCb9t1o1qol0rnK+u5sp7tUJ9X1J2n/N179fjyHLw9vD7tqtUdwdj5LjQkXoZu/KPFYeo1Deak7E3yv31Bg5bc+UhnBpge5Ex/vo/CwGQ2vLV+/DZqRb0l17MzCkao4QfEcGeumyVd1tz5fkboFpMYM1JRUpKsjNMwIVmS0w90/br+Au1Vf8EFAgAA", "string": ""}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Encoding", "Accept, Cookie"], "Allow": ["GET, PUT, PATCH, DELETE, HEAD, OPTIONS"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"], "Content-Encoding": ["gzip"]}, "status": {"code": 200, "message": "OK"}, "url": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e"}, "recorded_at": "2018-03-20T10:06:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.18.4"], "Accept-Encoding": ["gzip, deflate"], "Accept": ["*/*"], "Connection": ["keep-alive"], "X-Requested-With": ["XMLHttpRequest"], "PyKechain-Version": ["2.0.0"], "Authorization": ["Token <AUTH_TOKEN>"], "Content-Length": ["0"]}, "method": "DELETE", "uri": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e.json"}, "response": {"body": {"encoding": null, "string": ""}, "headers": {"Server": ["nginx/1.12.2"], "Date": ["Tue, 20 Mar 2018 10:06:35 GMT"], "Content-Type": ["application/json"], "Content-Length": ["14"], "Connection": ["keep-alive"], "Allow": ["GET, PUT, PATCH, DELETE, HEAD, OPTIONS"], "Vary": ["Accept, Cookie"], "X-XSS-Protection": ["1; mode=block"], "Strict-Transport-Security": ["max-age=10886400; includeSubDomains"], "X-Frame-Options": ["SAMEORIGIN"], "X-Content-Type-Options": ["nosniff"]}, "status": {"code": 204, "message": "No Content"}, "url": "<API_URL>/api/services/93116350-a9df-407e-b2a8-79d71402564e.json"}, "recorded_at": "2018-03-20T10:06:35"}], "recorded_with": "betamax/0.8.1"}