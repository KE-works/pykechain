{"recorded_with": "betamax/0.8.0", "http_interactions": [{"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "uri": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29", "headers": {"Connection": "keep-alive", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "", "encoding": null, "base64_string": "H4sIAAAAAAAAA51UXWvbMBT9K0VPG0SJLPlLeerW9WEw2GBjDxslyNJ1osaWjCR3KyH/fbLjpGkodBTHEF3dc8799A458H0TPFr+3qHeNWiJNiF0frlYbEFS0en5FrDcCG3m0raLaFh4aTvwi7wuKslrgiktAaeKCcyVJBhkJopMFQwSNb/31qAZ0ioS/w8g+hrRQvT+qLdw9c3Ze5Dh6l33GMMZorgK4IM26/fRM8DfED3jPx9E6GMS6MPNj88/b4c7J4zXQVtzyG2j15smvgFiKMH1cAa6+fL1++2nJ+nxjPZ3MyS812sD0Wj6ppmhFtoK3FQtD24CDDG1wog1uClZeiIbDH4lZNAPcFSOhgPT0QCt0EPtq+tqbpoD5Eg4uuxnzwRP5ZjkirfJvS40ZDYcJx32Nh3xUlq1aPyl3L2VG2jnkQKM8pNo/jbR51zXcYz/WLf1wxi/lPfdOBAurJQIgxYlSYFJgmn+g7IlIfH3K+JUD694VL3cQpzLHdImMhoJK2ftMKh1RhPGGGCRgMIp5BmukjzHnPOaJ4KVsk4iQWsVNEdMwalgsgJMWJbHpeEpLtOyxpWUVV0xSmrJjguWEhK9aIGTuLk4LXKBS1rEBauKrKCQcwCC9jPUOSvBD5NPlICMM45LxiROy0LgiucpJplKJQNeg+RoBKzdiCDzPKXF+RMLrnQQVXPqSAeu1XFxxtXbIelgrNfY71n84IjTBvbdoZTnp5VQ6qKjB4aVbKx54jn3Pm/k6cZBax/gguri7jlQxWF39nEaiP3d/h+A9gPGHwUAAA=="}, "status": {"message": "OK", "code": 200}, "headers": {"Transfer-Encoding": "chunked", "Content-Encoding": "gzip", "X-Content-Type-Options": "nosniff", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "Server": "nginx/1.12.2", "Allow": "GET, POST, HEAD, OPTIONS", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept-Encoding", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29"}}, {"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "script_type=PYTHON+SCRIPT&name=Test+upload+script+to+service&scope=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d&env_version=3.5", "encoding": "utf-8"}, "method": "POST", "uri": "<API_URL>/api/services.json", "headers": {"Connection": "keep-alive", "Accept": "*/*", "Content-Type": "application/x-www-form-urlencoded", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Content-Length": "119", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "{\"results\":[{\"id\":\"f3be7f64-30db-4a17-b4c5-63346eedba51\",\"url\":\"<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"create\":true,\"read\":true,\"update\":true,\"retrieve_execute\":true,\"write\":true,\"destroy\":true},\"updated_at\":\"2018-03-12T12:01:18.560455Z\"}]}", "encoding": null}, "status": {"message": "Created", "code": 201}, "headers": {"Transfer-Encoding": "chunked", "X-Content-Type-Options": "nosniff", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "Server": "nginx/1.12.2", "Location": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51", "Allow": "GET, POST, HEAD, OPTIONS", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept, Cookie", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/services.json"}}, {"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "uri": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51", "headers": {"Connection": "keep-alive", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "", "encoding": null, "base64_string": "H4sIAAAAAAAAA42QzW6DMBCEXwX5XIONMSRce2kvbdRyaasKGXtRrBBAtqGNorx7Nz8VPfY4387MavdIHPipC56UH0diDSlJKxoo2jyjgpmGZooXtMm0pLkQWQ5gGiU5uSOT69C8DWH0ZZLsQKdqtPEOqN4q28d62CcIEg9uthp88s/aXu0BeyvwIZrGblAm8trZMURhiG5laDNwpXbo0Y3A62E8B/O2aPS6ZTRNV0AzIxRdG80oaKkKaQoB3Fzs53Td2g7q28qFhsOlavNWPTw/Ra/3L4+bapnO4Px1LY8ZYujnP0zEEtkIbm/9GeFjj+TL2YCNwU2AjxuNWpR2cFGt6jxKVOZ35CA4CzPU8A16WiJ4e3DD4SpPv4WmVgH3p4yvKBOUpxVPS8ZLvoplzjIp38np8/QDEEPJTvABAAA="}, "status": {"message": "OK", "code": 200}, "headers": {"Transfer-Encoding": "chunked", "Content-Encoding": "gzip", "X-Content-Type-Options": "nosniff", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "Server": "nginx/1.12.2", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept-Encoding", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51"}}, {"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "--da7b65ec6ddb4fb6bf40e322059c8644\r\nContent-Disposition: form-data; name=\"attachment\"; filename=\"test_upload_script.py\"\r\n\r\n#!/usr/bin/env python\n\n\"\"\"\nDebugging script returning the environment etc\n\"\"\"\n\nimport os\nimport platform\nimport sys\nimport time\nfrom pprint import pprint\n\n\ndef main(*args, **kwargs):\n    start = time.time()\n    foo, bar = \"cow says\", \"moo!\"\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\n    print('--- arguments: {}'.format(args))\n    print('--- keyword arguments: {}'.format(kwargs))\n    print('--- local variables dict: {}'.format(dir()))\n    pprint('--- environment: {}'.format(os.environ), width=120)\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\n    pprint('--- python paths: {}'.format(sys.path), width=120)\n    mark_1 = time.time()\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\n    try:\n        import pykechain\n        print('--- importing pykechain version: {}'.format(pykechain.version))\n    except ImportError:\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\n\n    mark_2 = time.time()\n\n    from envparse import env\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\n              'KECHAIN_SCOPE_ID are not set')\n    else:\n        project = pykechain.get_project()\n        mark_3 = time.time()\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\n\n    end = time.time()\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\r\n--da7b65ec6ddb4fb6bf40e322059c8644--\r\n", "encoding": "utf-8"}, "method": "POST", "uri": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51/upload", "headers": {"Connection": "keep-alive", "Accept": "*/*", "Content-Type": "multipart/form-data; boundary=da7b65ec6ddb4fb6bf40e322059c8644", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Content-Length": "2265", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "{\"results\":[{\"id\":\"f3be7f64-30db-4a17-b4c5-63346eedba51\",\"url\":\"<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"test_upload_script.py\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"write\":true,\"update\":true,\"create\":false,\"read\":true,\"retrieve_execute\":true,\"destroy\":true}}]}", "encoding": null}, "status": {"message": "Accepted", "code": 202}, "headers": {"Server": "nginx/1.12.2", "Transfer-Encoding": "chunked", "Allow": "POST, OPTIONS", "X-Content-Type-Options": "nosniff", "Content-Type": "application/json", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Connection": "keep-alive", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept, Cookie", "X-XSS-Protection": "1; mode=block", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51/upload"}}, {"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "GET", "uri": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51", "headers": {"Connection": "keep-alive", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "", "encoding": null, "base64_string": "H4sIAAAAAAAAA42RzU7DMBCEXyXyGSdxnL/mygUuUEEugFDk2BvVappYthOoqr4726YoHLl5v52dWa1PxIKbeu9I9XEiWpGKdLyFostTymPV0lSwgrapzGjOeZoDqFZkjNyRyfYo3nlvXBVFe5CJMDrcA5U7oYdQjocIQeTAzlqCi/5pO4gDoG8NzgeT6UehAietNj7wY3AzQ5mChepxQDUCJ0dzGcy7opWbLqZJUgJNFRd0o2RMQWaiyFTBgamr/DLddLqH5hbpMbJZIpulHZrjKvXHq//2rX54fgpe718et/XancG6ZRcWxohhmP8wHmbIDNiDdheE1z4RaUF4tOxE7+AO/0Hg9b2d8D0ZdW0tlQVvNczQwDfIaeVfVq8FHsTb8biU518L1QiP+UnMShpzypKaJVXMKlaGeV5s0vKdnD/PP0aKNMEFAgAA"}, "status": {"message": "OK", "code": 200}, "headers": {"Transfer-Encoding": "chunked", "Content-Encoding": "gzip", "X-Content-Type-Options": "nosniff", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "Server": "nginx/1.12.2", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS", "Content-Type": "application/json", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept-Encoding", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51"}}, {"recorded_at": "2018-03-12T12:01:18", "request": {"body": {"string": "", "encoding": "utf-8"}, "method": "DELETE", "uri": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51.json", "headers": {"Connection": "keep-alive", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest", "Accept-Encoding": "gzip, deflate", "Content-Length": "0", "PyKechain-Version": "1.15.4"}}, "response": {"body": {"string": "", "encoding": null}, "status": {"message": "No Content", "code": 204}, "headers": {"Server": "nginx/1.12.2", "Connection": "keep-alive", "Content-Length": "0", "X-Content-Type-Options": "nosniff", "Content-Type": "application/json", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "X-Frame-Options": "SAMEORIGIN", "Vary": "Accept, Cookie", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS", "X-XSS-Protection": "1; mode=block", "Date": "Mon, 12 Mar 2018 12:01:18 GMT"}, "url": "<API_URL>/api/services/f3be7f64-30db-4a17-b4c5-63346eedba51.json"}}]}