{"recorded_with": "betamax/0.8.0", "http_interactions": [{"request": {"uri": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"base64_string": "H4sIAAAAAAAAA51UXWvbMBT9K0VPG0SJLPlLeerW9WEw2GBjDxslyNJ1osaWjCR3KyH/fbLjpGkodBTHEF3dc8799A458H0TPFr+3qHeNWiJNiF0frlYbEFS0en5FrDcCG3m0raLaFh4aTvwi7wuKslrgiktAaeKCcyVJBhkJopMFQwSNb/31qAZ0ioS/w8g+hrRQvT+qLdw9c3Ze5Dh6l33GMMZorgK4IM26/fRM8DfED3jPx9E6GMS6MPNj88/b4c7J4zXQVtzyG2j15smvgFiKMH1cAa6+fL1++2nJ+nxjPZ3MyS812sD0Wj6ppmhFtoK3FQtD24CDDG1wog1uClZeiIbDH4lZNAPcFSOhgPT0QCt0EPtq+tqbpoD5Eg4uuxnzwRP5ZjkirfJvS40ZDYcJx32Nh3xUlq1aPyl3L2VG2jnkQKM8pNo/jbR51zXcYz/WLf1wxi/lPfdOBAurJQIgxYlSYFJgmn+g7IlIfH3K+JUD694VL3cQpzLHdImMhoJK2ftMKh1RhPGGGCRgMIp5BmukjzHnPOaJ4KVsk4iQWsVNEdMwalgsgJMWJbHpeEpLtOyxpWUVV0xSmrJjguWEhK9aIGTuLk4LXKBS1rEBauKrKCQcwCC9jPUOSvBD5NPlICMM45LxiROy0LgiucpJplKJQNeg+RoBKzdiCDzPKXF+RMLrnQQVXPqSAeu1XFxxtXbIelgrNfY71n84IjTBvbdoZTnp5VQ6qKjB4aVbKx54jn3Pm/k6cZBax/gguri7jlQxWF39nEaiP3d/h+A9gPGHwUAAA==", "string": "", "encoding": null}, "url": "<API_URL>/api/scopes.json?status=ACTIVE&name=Bike+Project+%28pykechain+testing%29", "status": {"message": "OK", "code": 200}, "headers": {"X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "Content-Type": "application/json", "Connection": "keep-alive", "Content-Encoding": "gzip", "X-XSS-Protection": "1; mode=block", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Allow": "GET, POST, HEAD, OPTIONS"}}}, {"request": {"uri": "<API_URL>/api/services.json", "body": {"string": "name=Test+upload+script+to+service&script_type=PYTHON+SCRIPT&scope=6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d&env_version=3.5", "encoding": "utf-8"}, "method": "POST", "headers": {"Content-Type": "application/x-www-form-urlencoded", "PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Content-Length": "119", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"string": "{\"results\":[{\"id\":\"eca46052-7c72-4d44-ac33-4d187ab1bae5\",\"url\":\"<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"write\":true,\"update\":true,\"create\":true,\"read\":true,\"retrieve_execute\":true,\"destroy\":true},\"updated_at\":\"2018-03-12T13:44:34.491197Z\"}]}", "encoding": null}, "url": "<API_URL>/api/services.json", "status": {"message": "Created", "code": 201}, "headers": {"X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Vary": "Accept, Cookie", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "Location": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5", "Content-Type": "application/json", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Allow": "GET, POST, HEAD, OPTIONS"}}}, {"request": {"uri": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"base64_string": "H4sIAAAAAAAAA42QQW+DMAyF/wrKeQFCQlO47rJdtmrjsk0TShOjRqWAksBWVf3vM20ndtzN7/n5s+wTceDHNnhSfpyINaQkoJVYpXlGpZYZFUYIqjTnWLG1VFu2VZCTOzK6FsO7EAZfJskedKYGG++B6p2yXaz7Q4JG4sFNVoNP/ont1AGQW4EP0Ti0vTKR184OIQp9dINhzMDVtX2HaTS87od5cNXIrS6alGbZGhDOFS2MTinoXMncSA7MXOLzdN3YFurbysUNxwtq81Y9PD9Fr/cvj5tq6U7g/HUti1O0oZv+eDyerxjAHayfLXzsiXw5G5AY3Aj4uMGoRWkHF9Wo1qNEZX5bDoKzMEEN36DHZQRvD64/XuX5F2hqFXB/lrI1TTllWcV4KUTJRSwKxgr5Ts6f5x8+VojO8AEAAA==", "string": "", "encoding": null}, "url": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5", "status": {"message": "OK", "code": 200}, "headers": {"X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "Content-Type": "application/json", "Connection": "keep-alive", "Content-Encoding": "gzip", "X-XSS-Protection": "1; mode=block", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"}}}, {"request": {"uri": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5/upload", "body": {"string": "--4ebb37b18bbc4b4ca0c13c5f5483b398\r\nContent-Disposition: form-data; name=\"attachment\"; filename=\"test_upload_script.py\"\r\n\r\n#!/usr/bin/env python\n\n\"\"\"\nDebugging script returning the environment etc\n\"\"\"\n\nimport os\nimport platform\nimport sys\nimport time\nfrom pprint import pprint\n\n\ndef main(*args, **kwargs):\n    start = time.time()\n    foo, bar = \"cow says\", \"moo!\"\n    print('>>> starting on {}'.format(time.strftime('%c', time.gmtime(start))))\n    print('--- arguments: {}'.format(args))\n    print('--- keyword arguments: {}'.format(kwargs))\n    print('--- local variables dict: {}'.format(dir()))\n    pprint('--- environment: {}'.format(os.environ), width=120)\n    pprint('--- platform details (uname): {}'.format(platform.uname()), width=120)\n    pprint('--- python paths: {}'.format(sys.path), width=120)\n    mark_1 = time.time()\n    print('<<< intermediate timing on {}, duration: {}'.format(time.strftime('%c', time.gmtime(mark_1)), mark_1 - start))\n    print('--- python pip packages installed \\n{}'.format(os.popen('pip freeze').readlines()))\n    try:\n        import pykechain\n        print('--- importing pykechain version: {}'.format(pykechain.version))\n    except ImportError:\n        print('/!\\ pykechain is not installed, please install pykechain version 1.12 or later')\n\n    mark_2 = time.time()\n\n    from envparse import env\n    if not env('KECHAIN_URL', None) or not env('KECHAIN_TOKEN', None) or not env('KECHAIN_SCOPE_ID', None):\n        print('/!\\ cannot interact using pykechain as environment variables KECHAIN_URL, KECHAIN_TOKEN and '\n              'KECHAIN_SCOPE_ID are not set')\n    else:\n        project = pykechain.get_project()\n        mark_3 = time.time()\n        print(\"--- retrieving project '{}' from kechain (url: {})\".format(project.name, env('KECHAIN_URL')))\n        print(\"--- {} activities, {} parts\".format(len(project.activities()), len(project.parts())))\n        print(\"--- retrieving as user: '{}\".format(env('KECHAIN_USERNAME')))\n        print(\"<<< interaction with ke-chain took: {}s\".format(mark_3-mark_2))\n\n    end = time.time()\n    print('<<< ending on {}, duration: {}'.format(time.strftime('%c', time.gmtime(end)), end - start))\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\r\n--4ebb37b18bbc4b4ca0c13c5f5483b398--\r\n", "encoding": "utf-8"}, "method": "POST", "headers": {"Content-Type": "multipart/form-data; boundary=4ebb37b18bbc4b4ca0c13c5f5483b398", "PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Content-Length": "2265", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"string": "{\"results\":[{\"id\":\"eca46052-7c72-4d44-ac33-4d187ab1bae5\",\"url\":\"<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5\",\"name\":\"Test upload script to service\",\"description\":\"\",\"scope\":\"6f7bc9f0-228e-4d3a-9dc0-ec5a75d73e1d\",\"script_file_name\":\"test_upload_script.py\",\"script_type\":\"PYTHON SCRIPT\",\"script_version\":\"1.0\",\"env_version\":\"3.5\",\"permissions\":{\"create\":false,\"read\":true,\"update\":true,\"retrieve_execute\":true,\"write\":true,\"destroy\":true}}]}", "encoding": null}, "url": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5/upload", "status": {"message": "Accepted", "code": 202}, "headers": {"Vary": "Accept, Cookie", "Connection": "keep-alive", "X-Content-Type-Options": "nosniff", "Allow": "POST, OPTIONS", "Transfer-Encoding": "chunked", "Content-Type": "application/json", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "X-Frame-Options": "SAMEORIGIN", "X-XSS-Protection": "1; mode=block", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Server": "nginx/1.12.2"}}}, {"request": {"uri": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5", "body": {"string": "", "encoding": "utf-8"}, "method": "GET", "headers": {"PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"base64_string": "H4sIAAAAAAAAA42RzW6DMBCEXwX5HPNjQyBce2kvbdRyaasKOfaiWCFg2YY2ivLuXUIqcuzN++3sjL0+EwtuaL0j5eeZaEVKAlKk6zhjNJc5o6lKUyok53hKilzskp2AjKzIYFsU7703royiA0gmjA4PQOVe6C6U/TFCEDmwo5bgon/aduII6FuB88Fg2l6owEmrjQ98H9zMUKZgprrvUI3Ayd5Mg+sm38lNE1PGCkBzLuhGyZiCzESeqZxDoq7yabpudAv1LdJjZD1H1nM7NKdF6k9X/+179fjyHLw9vD5tq6U7gnXzXZIwRgzdeMd4OD3NgD1qNyHc9plIC8KjZSNaByv8B4Hb93bA82DUtTVXFrzVMEINPyCHhX9bvRS4EG/701xe/ixULTzmszgpaMxpwqqEl2la8jRcZzEv+Ae5fF1+ASViIy8FAgAA", "string": "", "encoding": null}, "url": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5", "status": {"message": "OK", "code": 200}, "headers": {"X-Content-Type-Options": "nosniff", "Transfer-Encoding": "chunked", "Vary": "Accept-Encoding", "X-Frame-Options": "SAMEORIGIN", "Server": "nginx/1.12.2", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "Content-Type": "application/json", "Connection": "keep-alive", "Content-Encoding": "gzip", "X-XSS-Protection": "1; mode=block", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"}}}, {"request": {"uri": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5.json", "body": {"string": "", "encoding": "utf-8"}, "method": "DELETE", "headers": {"PyKechain-Version": "1.15.4", "Accept": "*/*", "User-Agent": "python-requests/2.18.4", "Accept-Encoding": "gzip, deflate", "Connection": "keep-alive", "Authorization": "Token <AUTH_TOKEN>", "Content-Length": "0", "X-Requested-With": "XMLHttpRequest"}}, "recorded_at": "2018-03-12T13:44:34", "response": {"body": {"string": "", "encoding": null}, "url": "<API_URL>/api/services/eca46052-7c72-4d44-ac33-4d187ab1bae5.json", "status": {"message": "No Content", "code": 204}, "headers": {"Vary": "Accept, Cookie", "Content-Length": "0", "X-Content-Type-Options": "nosniff", "Allow": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS", "Content-Type": "application/json", "Date": "Mon, 12 Mar 2018 13:44:34 GMT", "Connection": "keep-alive", "X-XSS-Protection": "1; mode=block", "X-Frame-Options": "SAMEORIGIN", "Strict-Transport-Security": "max-age=518400; includeSubDomains", "Server": "nginx/1.12.2"}}}]}